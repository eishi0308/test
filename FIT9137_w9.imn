node n1 {
    type router
    model static
    network-config {
	hostname phoenix
	!
	interface eth2
	 ip address 10.1.1.129/26
	!
	interface eth1
	 ip address 10.1.1.65/26
	!
	interface eth0
	 ip address 10.1.1.1/26
	!
    }
    canvas c1
    iconcoords {720.0 281.0}
    labelcoords {720.0 313.0}
    interface-peer {eth0 n11}
    interface-peer {eth1 n10}
    interface-peer {eth2 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.130
	
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 10.1.1.0 netmask 255.255.255.192 {
	  pool {
	    range 10.1.1.31 10.1.1.62;
	    default-lease-time 7200;
	    option routers 10.1.1.1;
	    option domain-name-servers 10.1.1.70;
	    option domain-name "argos.edu";
	    option subnet-mask 255.255.255.192;
	    option broadcast-address 10.1.1.63;
	  }
	}
	
	
	
	
	
	}
    }
    services {IPForward DefaultRoute DHCP}
}

node n2 {
    type router
    model static
    network-config {
	hostname Internet
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.1.1.130/26
	!
    }
    canvas c1
    iconcoords {487.0 281.0}
    labelcoords {487.0 313.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:StaticRoute
	custom-command StaticRoute
	config {
	files=('staticroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:StaticRoute:staticroute.sh
	custom-command staticroute.sh
	config {
	#!/bin/sh
	# auto-generated by StaticRoute service (utility.py)
	#
	# NOTE: this service must be customized to be of any use
	#       Below are samples that you can uncomment and edit.
	#
	/sbin/ip route add 10.1.1.0/26 via 10.1.1.129
	/sbin/ip route add 10.1.1.64/26 via 10.1.1.129
	/sbin/ip route add 172.16.1.0/24 via 10.0.3.2
	/sbin/ip route add 192.168.1.0/24 via 10.0.3.2
	
	}
    }
    custom-config {
	custom-config-id service:bind9
	custom-command bind9
	config {
	files=('bind.sh', '/etc/bind.d/named.conf', '/etc/bind.d/named.conf.options', '/etc/bind.d/named.conf.local', '/etc/bind.d/named.conf.default-zones', '/etc/bind.d/db.example.com', )
	cmddown=('service bind9 stop', )
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.local
	custom-command /etc/bind.d/named.conf.local
	config {
	zone "argos.edu" {
	  type slave;
	  masters { 10.1.1.70; };
	};
	
	zone "delos.edu" {
	  type slave;
	  masters { 10.0.3.2; };
	};
	
	                    
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.options
	custom-command /etc/bind.d/named.conf.options
	config {
	// Example named.conf.options file
	
	options {
	    directory "/var/cache/bind";
	
	    // If there is a firewall between you and nameservers you want
	    // to talk to, you may need to fix the firewall to allow multiple
	    // ports to talk.  See http://www.kb.cert.org/vuls/id/800113
	
	    // If your ISP provided one or more IP addresses for stable 
	    // nameservers, you probably want to use them as forwarders.  
	    // Uncomment the following block, and insert the addresses replacing 
	    // the all-0's placeholder.
	
	    // forwarders {
	    //  0.0.0.0;
	    // };
	
	    //========================================================================
	    // If BIND logs error messages about the root key being expired,
	    // you will need to update your keys.  See https://www.isc.org/bind-keys
	    //========================================================================
	    dnssec-validation no;
	    allow-query { any; };
	    auth-nxdomain no;    # conform to RFC1035
	    listen-on { any; };
	    recursion yes;
	};
	
	            
	}
    }
    services {IPForward StaticRoute bind9}
}

node n3 {
    type router
    model static
    network-config {
	hostname sphinx
	!
	interface eth2
	 ip address 172.16.1.1/24
	!
	interface eth1
	 ip address 192.168.1.1/24
	!
	interface eth0
	 ip address 10.0.3.2/24
	!
    }
    canvas c1
    iconcoords {222.0 282.0}
    labelcoords {222.0 314.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n12}
    interface-peer {eth2 n13}
    custom-config {
	custom-config-id service:bind9
	custom-command bind9
	config {
	files=('bind.sh', '/etc/bind.d/named.conf', '/etc/bind.d/named.conf.options', '/etc/bind.d/named.conf.local', '/etc/bind.d/named.conf.default-zones', '/etc/bind.d/db.delos.edu', )
	cmddown=('service bind9 stop', )
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/db.delos.edu
	custom-command /etc/bind.d/db.delos.edu
	config {
	$TTL    604800
	@   IN  SOA ns.delos.edu. root.delos.edu. (
	                  2     ; Serial
	             604800     ; Refresh
	              86400     ; Retry
	            2419200     ; Expire
	             604800 )   ; Negative Cache TTL
	;
	@	IN	NS	ns.delos.edu.
	ns	IN	A	10.0.3.2
	www	IN	A	172.16.1.11               
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.local
	custom-command /etc/bind.d/named.conf.local
	config {
	zone "delos.edu" {
		type master;
		file "/etc/bind.d/db.delos.edu";
		allow-transfer { 10.0.3.1; };
	};
	                    
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.options
	custom-command /etc/bind.d/named.conf.options
	config {
	// Example named.conf.options file
	
	options {
	    directory "/var/cache/bind";
	
	    // If there is a firewall between you and nameservers you want
	    // to talk to, you may need to fix the firewall to allow multiple
	    // ports to talk.  See http://www.kb.cert.org/vuls/id/800113
	
	    // If your ISP provided one or more IP addresses for stable 
	    // nameservers, you probably want to use them as forwarders.  
	    // Uncomment the following block, and insert the addresses replacing 
	    // the all-0's placeholder.
	
	    forwarders {
	      10.0.3.1;
	    };
	
	    //========================================================================
	    // If BIND logs error messages about the root key being expired,
	    // you will need to update your keys.  See https://www.isc.org/bind-keys
	    //========================================================================
	    dnssec-validation no;
	    allow-query { any; };
	    auth-nxdomain no;    # conform to RFC1035
	    listen-on { any; };
	    recursion yes;
	};
	
	            
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.3.1
	
	
	}
    }
    services {IPForward DefaultRoute bind9}
}

node n4 {
    type router
    model host
    network-config {
	hostname ns-argos
	!
	interface eth0
	 ip address 10.1.1.70/26
	!
    }
    canvas c1
    iconcoords {583.0 463.0}
    labelcoords {583.0 495.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:bind9
	custom-command bind9
	config {
	files=('bind.sh', '/etc/bind.d/named.conf', '/etc/bind.d/named.conf.options', '/etc/bind.d/named.conf.local', '/etc/bind.d/named.conf.default-zones', '/etc/bind.d/db.argos.edu', )
	cmddown=('service bind9 stop', )
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/db.argos.edu
	custom-command /etc/bind.d/db.argos.edu
	config {
	$TTL    604800
	@   IN  SOA ns.argos.edu. root.argos.edu. (
	                  2     ; Serial
	             604800     ; Refresh
	              86400     ; Retry
	            2419200     ; Expire
	             604800 )   ; Negative Cache TTL
	;
	@	IN	NS	ns.argos.edu.
	ns	IN	A	10.1.1.70
	www	IN	A	10.1.1.71
	1w	IN	MX	1	mail.argos.edu.
	mail	IN	A	10.1.1.72		 
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.local
	custom-command /etc/bind.d/named.conf.local
	config {
	zone "argos.edu" {
		type master;
		file "/etc/bind.d/db.argos.edu";
		allow-transfer { 10.1.1.130; };
	};
	}
    }
    custom-config {
	custom-config-id service:bind9:/etc/bind.d/named.conf.options
	custom-command /etc/bind.d/named.conf.options
	config {
	// Example named.conf.options file
	
	options {
	    directory "/var/cache/bind";
	
	    // If there is a firewall between you and nameservers you want
	    // to talk to, you may need to fix the firewall to allow multiple
	    // ports to talk.  See http://www.kb.cert.org/vuls/id/800113
	
	    // If your ISP provided one or more IP addresses for stable 
	    // nameservers, you probably want to use them as forwarders.  
	    // Uncomment the following block, and insert the addresses replacing 
	    // the all-0's placeholder.
	
	    forwarders {
	      10.1.1.129;
	     };
	
	    //========================================================================
	    // If BIND logs error messages about the root key being expired,
	    // you will need to update your keys.  See https://www.isc.org/bind-keys
	    //========================================================================
	    dnssec-validation no;
	    allow-query { any; };
	    auth-nxdomain no;    # conform to RFC1035
	    listen-on { any; };
	    recursion yes;
	};
	
	            
	}
    }
    services {DefaultRoute SSH bind9}
}

node n5 {
    type router
    model host
    network-config {
	hostname www-argos
	!
	interface eth0
	 ip address 10.1.1.71/26
	!
    }
    canvas c1
    iconcoords {721.0 539.0}
    labelcoords {721.0 571.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', 'start-apache.sh', '/var/www/alink.html', )
	cmdup=('bash start-apache.sh', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/alink.html
	custom-command /var/www/alink.html
	config {
	<html><body>
	<h1>East of the Sun, West of the Moon</h1>
	<p>Say the year is the year of the phoenix
	Ordinary sun and common moon 
	turn as they may are too mysterious 
	unless such as are neither sun nor moon
	...
	</p>
	</body></html>
	}
    }
    custom-config {
	custom-config-id service:HTTP:start-apache.sh
	custom-command start-apache.sh
	config {
	#!/bin/bash
	chown www-data /var/lock/apache2
	apache2ctl start
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body>
	<h1>Welcome to Argos Web Server</h1>
	<p>We strive for excellence</p>
	<a href=alink.html>click on this link</a>
	</body></html>
	}
    }
    custom-config {
	custom-config-id service:resolvconf
	custom-command resolvconf
	config {
	dirs=('/var/run/resolvconf', )
	files=('resolvconf.sh', )
	cmdup=('sh resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:resolvconf:resolvconf.sh
	custom-command resolvconf.sh
	config {
	#  Adjust the name servers accordingly and uncomment lines
	#  Do not use with DHCP Client if DHCP server specifies DNS address (the commands are included in DHCP client configuration script)
	resolvconf --enable-updates
	echo "nameserver 10.1.1.70" | resolvconf -a eth0
	resolvconf -u
	
	}
    }
    services {DefaultRoute SSH HTTP resolvconf}
}

node n6 {
    type router
    model host
    network-config {
	hostname mail-argos
	!
	interface eth0
	 ip address 10.1.1.72/26
	!
    }
    canvas c1
    iconcoords {850.0 465.0}
    labelcoords {850.0 497.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.1.1.65
	
	}
    }
    custom-config {
	custom-config-id service:resolvconf
	custom-command resolvconf
	config {
	dirs=('/var/run/resolvconf', )
	files=('resolvconf.sh', )
	cmdup=('sh resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:resolvconf:resolvconf.sh
	custom-command resolvconf.sh
	config {
	#  Adjust the name servers accordingly and uncomment lines
	#  Do not use with DHCP Client if DHCP server specifies DNS address (the commands are included in DHCP client configuration script)
	resolvconf --enable-updates
	echo "nameserver 10.1.1.70" | resolvconf -a eth0
	resolvconf -u
	
	}
    }
    custom-config {
	custom-config-id service:postfix
	custom-command postfix
	config {
	files=('postfix.sh', )
	cmddown=('postfix stop', )
	}
    }
    custom-config {
	custom-config-id service:postfix:postfix.sh
	custom-command postfix.sh
	config {
	#!/bin/sh
	# auto-generated for postfix
	
	# uncomment and modify the configuration parameters according to your setup
	
	cp -R /etc/postfix.d/* /etc/postfix
	
	postconf -e "myhostname=mail"
	postconf -e "mydomain=argos.edu"
	
	postconf -e "myorigin=argos.edu"
	
	postconf -e "mydestination=mail, localhost, mail.argos.edu, argos.edu"
	
	postconf -e "mynetworks=127.0.0.0/8 10.1.1.0/26 10.1.1.64/26"
	postconf -e "mynetworks_style=subnet"
	postconf -e "inet_interfaces=127.0.0.1, 10.1.1.72"
	postconf -e "inet_protocols=ipv4"
	
	#for simplicity the TLS is disabled, always use TLS in practice for security
	postconf -e "smtp_use_tls=no"
	postfix start
	}
    }
    services {DefaultRoute SSH postfix resolvconf}
}

node n7 {
    type router
    model host
    network-config {
	hostname www-delos
	!
	interface eth0
	 ip address 172.16.1.11/24
	!
    }
    canvas c1
    iconcoords {43.0 121.0}
    labelcoords {43.0 153.0}
    interface-peer {eth0 n13}
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	files=('/etc/apache2/apache2.conf', '/etc/apache2/envvars', '/var/www/index.html', )
	}
    }
    custom-config {
	custom-config-id service:HTTP:/var/www/index.html
	custom-command /var/www/index.html
	config {
	<html><body><!-- generated by utility.py:HttpService -->
	<h1>Welcome to Delos web server</h1>
	<p>We are here to help you thrive!</p>
	</body></html>
	}
    }
    services {DefaultRoute SSH HTTP}
}

node n8 {
    type router
    model PC
    network-config {
	hostname selene
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {919.0 225.0}
    labelcoords {919.0 257.0}
    interface-peer {eth0 n11}
    services {DefaultRoute DHCPClient}
}

node n9 {
    type router
    model PC
    network-config {
	hostname helios
	!
	interface eth0
	 ip address 192.168.1.20/24
	!
    }
    canvas c1
    iconcoords {41.0 461.0}
    labelcoords {41.0 493.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:resolvconf
	custom-command resolvconf
	config {
	dirs=('/var/run/resolvconf', )
	files=('resolvconf.sh', )
	cmdup=('sh resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:resolvconf:resolvconf.sh
	custom-command resolvconf.sh
	config {
	#  Adjust the name servers accordingly and uncomment lines
	#  Do not use with DHCP Client if DHCP server specifies DNS address (the commands are included in DHCP client configuration script)
	resolvconf --enable-updates
	echo "nameserver 10.0.3.2" | resolvconf -a eth0
	resolvconf -u
	
	}
    }
    services {DefaultRoute resolvconf}
}

node n10 {
    type lanswitch
    network-config {
	hostname sw-dmz
	!
    }
    canvas c1
    iconcoords {721.0 373.0}
    labelcoords {721.0 397.0}
    interface-peer {e0 n1}
    interface-peer {e1 n4}
    interface-peer {e2 n5}
    interface-peer {e3 n6}
}

node n11 {
    type lanswitch
    network-config {
	hostname sw-internal
	!
    }
    canvas c1
    iconcoords {847.0 279.0}
    labelcoords {847.0 303.0}
    interface-peer {e0 n1}
    interface-peer {e1 n8}
}

node n12 {
    type lanswitch
    network-config {
	hostname sw-clients
	!
    }
    canvas c1
    iconcoords {221.0 462.0}
    labelcoords {221.0 486.0}
    interface-peer {e0 n3}
    interface-peer {e1 n9}
}

node n13 {
    type lanswitch
    network-config {
	hostname sw-servers
	!
    }
    canvas c1
    iconcoords {221.0 119.0}
    labelcoords {221.0 143.0}
    interface-peer {e0 n3}
    interface-peer {e1 n7}
}

link l1 {
    nodes {n1 n11}
    bandwidth 0
}

link l2 {
    nodes {n1 n10}
    bandwidth 0
}

link l3 {
    nodes {n1 n2}
    bandwidth 0
}

link l4 {
    nodes {n2 n3}
    bandwidth 0
}

link l5 {
    nodes {n3 n12}
    bandwidth 0
}

link l6 {
    nodes {n3 n13}
    bandwidth 0
}

link l7 {
    nodes {n13 n7}
    bandwidth 0
}

link l8 {
    nodes {n12 n9}
    bandwidth 0
}

link l9 {
    nodes {n10 n4}
    bandwidth 0
}

link l10 {
    nodes {n10 n5}
    bandwidth 0
}

link l11 {
    nodes {n10 n6}
    bandwidth 0
}

link l12 {
    nodes {n11 n8}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names yes
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

